var candle;
var heightRatio;
var seed;
var bg;

function setup() {
  createCanvas(windowWidth, windowHeight);
  seed = floor(random(Number.MAX_SAFE_INTEGER));
  reset();
}

function draw() {
  bg.display();
  candle.update();
  candle.display();
}

function windowResized() {
  resizeCanvas(windowWidth, windowHeight);
  reset();
}

function reset() {
  heightRatio = height/595;
  noiseSeed(seed);
  candle = new Candle(width/2, height/2);
  bg = new Background();
}

class Background{
  constructor() {
    this.bg = createGraphics(width, height);
    this.bg.translate(width/2, height/2);
    this.defineConstants();
    this.construct();
  }
  
  display() {
    image(this.bg, 0, 0);
  }

  construct() {
    this.bg.noStroke();
    this.bg.background(this.COLOR.BLACK);
    for (let i = this.DIAM.MAX; i > this.DIAM.MIN; i -= this.DIAM.DELTA) {
      this.bg.fill(map(i, this.DIAM.MIN, this.DIAM.MAX, this.COLOR.GRAY.LIGHTER, this.COLOR.GRAY.DARKER));
      this.bg.circle(this.POS.X, this.POS.Y, i);
    }
  }
defineConstants() {
    this.COLOR = {BLACK: color(0),
                  GRAY: {LIGHTER: 20, DARKER: 0}};
    this.DIAM = {MIN: 1.5*height, MAX: 2*width, DELTA:5};
    this.POS = {X:0, Y: -height/3};
  }
}

class Candle {
  constructor(x, y) {
    this.flame = new Flame(x, y);
    this.wick = new Wick(x, y);
    this.wax = new Wax(x, y);
  }

  update() {
    this.flame.update();
  }

  display() {
    this.flame.display();
    this.wick.display();
    this.wax.display();
  }
}

class Wax {
  constructor(x, y) {
    this.pg = createGraphics(width, height);
    this.pg.translate(x, y);
    this.defineConstants();
    this.construct();
  }

  display() {
    image(this.pg, 0, 0);
  }

  construct() {
    this.pg.noStroke();
    for (let i = 0; i < this.N; ++ i) {
      this.pg.fill(this.COLOR.RED,
                   this.COLOR.GREEN + this.COLOR.D_GREEN*i,
                   this.COLOR.BLUE,
                   this.COLOR.ALPHA + this.COLOR.D_ALPHA*i);
      this.pg.rect(this.POS.X, this.POS.Y, this.DIM.W, this.DIM.H + this.DIM.D_H*i,
                   this.RADIUS, this.RADIUS, 0, 0);
    }
  }
 defineConstants() {
    this.POS = {X: -30*heightRatio, Y: 65*heightRatio};
    this.DIM = {W: 60*heightRatio, H: 60*heightRatio, D_H: -5*heightRatio};
    this.N = 10;
    this.RADIUS = 5*heightRatio;
    this.COLOR = {
      RED: 255,
      GREEN: 80, D_GREEN: 10,
      BLUE: 0,
      ALPHA: 0, D_ALPHA: 5};
  }
}

class Wick {
  constructor(x, y) {
    this.pg = createGraphics(width, height);
    this.pg.translate(x, y);
    this.defineConstants();
    this.construct();
  }

  display() {
    image(this.pg, 0, 0);
  }

  construct() {  
    this.pg.noStroke();
    this.pg.fill(this.COLOR.BLACK);
    for (let i = 0; i < this.N; ++i) {
      let dNoise = this.NOISE.SPEED*i;
      this.pg.circle(customNoise(this.NOISE, dNoise), this.Y + i, this.WIDTH);
    }
  }

  defineConstants() {
    this.Y = 35*heightRatio;
    this.WIDTH = 4*heightRatio;
    this.NOISE = {AMPLITUDE: 20*heightRatio, DISLOCATION: random(100), SPEED: 0.05};
    this.N = floor(30*heightRatio);
    this.COLOR = {BLACK: color(0)};
  }
}

class Flame {
  constructor(x, y) {
    this.defineConstants();

    this.layer = [];
    for (let i = 0; i < this.N_LAYERS; ++i) {
      this.layer[i] = createGraphics(width, height);
      this.layer[i].translate(x, y);
    }
  }
